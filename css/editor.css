:root {
    --baseWidth: 32px;
    --baseHeight: 32px;
    --editorContainerWidthInTiles: 4;
    --editorContainerHeightInTiles: 4;
}


body {
    background-color: #1c1c1a;
    font-family: 'Lucida Console', monospace;
}


img {
    width: 30px;
    height: 30px;
}


.invisible {
    display: none !important;
}


.mainContainer {
    column-gap: 1rem;
    row-gap: 5vh;
    display: grid;
    grid-template-columns: 1.5fr 10fr 3fr;
    grid-template-rows: 80fr 14fr;
    margin: 2em;
    height: 93vh;
}


.selectorContainer {
    grid-column: 1;
    grid-row: 1;
    background-color: #1c1c1a;
    border: 0.2rem solid white;
    column-gap: 0.5em;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    padding-left: 0.5em;
    padding-right:0.5em;
    padding-bottom: 1em;
}


.editorContainer {
    grid-column: 2;
    grid-row: 1;
    display: grid;
    grid-template-columns: repeat(auto-fit, 32px);
    margin: auto;
    width: calc(var(--editorContainerWidthInTiles) * var(--baseWidth));
    height: calc(var(--editorContainerHeightInTiles) * var(--baseHeight));
}


.controlContainer {
    grid-column: 3;
    grid-row: 1;
    background-color: #1c1c1a;
    color: white;
    display: flex;
    flex-direction: column;
    padding: 0.5em;
    row-gap: 1.5em;
}


.levelRotationBar {
    grid-column: 1 / 4;
    grid-row: 2;
    border: 0.2rem solid white;
    padding: 0.7%;
}


.selectionBar {
    display: flex;
    flex-direction: column;
}


.controlGroup {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 1rem;
}


.controlGroup label {
    margin-left: 0.5em;
}


input[type=radio] {
    display: none;
}


.inputPosition {
    padding: 0.4em;
    text-align: center;
    width: 4em; 
}


.scatterSpawnSelectionPointHighlight {
    /* prioritize border property over border property of css class editorTile */
    border: 5px solid #289D10 !important;
}


.ghostBlinkyHighlight {
    border: 5px solid #dd1717 !important;
}


.ghostPinkyHighlight {
    border: 5px solid #ee45bc !important;
}


.ghostInkyHighlight {
    border: 5px solid #08e6db !important;
}


.ghostClydeHighlight {
    border: 5px solid #ee810d !important;
}


.selector {
    border: 5px solid;
    display: inline-block;
    height: 30px;
    margin-top: 1em;
    width: 30px;
    background-color: black;
    background-size: contain;
}


.selectorSelected {
    border: 5px solid #fdfdfd;
}


.editorTile {
    border: 1px solid white;
    box-sizing: border-box;
    height: 32px;
    width: 32px;
    background-size: contain;
}


.undefinedTile {
    background-color: rgb(99, 93, 93);
}


.wallTile {
    background-image: url('../sprites/background/wall.svg');
}


.emptyTile {
    background-image: url('../sprites/background/emptySpace.svg');
}


.pointTile {
    background-image: url('../sprites/background/consumables/point.svg');
}


.powerupTile {
    background-image: url('../sprites/background/consumables/powerUp.svg');
}


.ghostDoorHorizontalTile {
    background-image: url('../sprites/background/door/ghost_door_horizontal.svg');
}


.ghostDoorVerticalTile {
    background-image: url('../sprites/background/door/ghost_door_vertical.svg');
}


.ghostDoorCrossingTile {
    background-image: url('../sprites/background/door/ghost_door_diagonal.svg');
}


.teleporter1Tile {
    background-image: url('../sprites/background/teleporters/teleporter1.svg');
}


.teleporter2Tile {
    background-image: url('../sprites/background/teleporters/teleporter2.svg');
}


.teleporter3Tile {
    background-image: url('../sprites/background/teleporters/teleporter3.svg');
}


.bonusSpawnTile {
    background-color: black;
    background-image: url('../sprites/background/consumables/bonus_elements/bonusCherry.svg');
}


.pacmanTile {
    background-image: url('../sprites/actors/pacman/pacman_right.svg');
}


.ghostBlinkyTile {
    background-image: url('../sprites/actors/ghost_blinky/blinky_down.svg');
}


.ghostPinkyTile {
    background-image: url('../sprites/actors/ghost_pinky/pinky_down.svg');
}


.ghostInkyTile {
    background-image: url('../sprites/actors/ghost_inky/inky_down.svg');
}


.ghostClydeTile {
    background-image: url('../sprites/actors/ghost_clyde/clyde_down.svg');
}


#rotationContainer {
    display: inline-flex;
    overflow-x: auto;
    width: 90%;
    min-height: 100%;
    vertical-align: top;
}


#levelAddButton {
    display: inline;
    background-color: transparent;
    border: 0.1rem dashed white;
    color: white;
    font-weight: bold;
    width: 8%;
    min-height: 100%;
}


#levelAddButton:hover {
    background-color: black;
    transition-duration: 2000ms;
}


#playLevel {
    width: 100%;
}


#levelElementTemplate {
    display: none;
}


.level {
    background-color: rgb(38 35 35);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    margin-right: 1.5rem;
    min-width: 10%;
    position: relative;
}


.level:hover {
    opacity: 0.8;
}


.levelRepetition {
    padding-left: 0.25em;
    color: white;
    font-weight: bold;
    font-size: 1rem;
}


.levelDelete {
    position: absolute;
    right: 0;
    top: 0;
    padding-right: 0.25rem;
    color: white;
    font-weight: bold;
    font-size: 1rem;
    border: none;
    background-color: red;
    opacity: 0.5;
}


.levelDelete:hover {
    opacity: 1;
}


.levelSelected {
    border: 0.2rem solid white;
}


.displayInfiniteSymbol::after {
    content: '\221E';
}


#scatterPositionFieldset {
    margin-bottom: 1.5rem;
}


.scatterSpawnControlGroup {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}


fieldset {
    padding: 1rem;
    border: 0.2rem solid white;
}


legend {
    font-weight: bold;
}